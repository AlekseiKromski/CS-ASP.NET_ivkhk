@model WebApplication1.Models.Picture

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Pictures", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Picture</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.museum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.museum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.museum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.canvas, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.HiddenFor(model => model.canvas, new
            {
                htmlAttributes = new
                {
                    @class
           = "form-control"
                }
            })
            @Html.HiddenFor(model => model.canvasType, new
            {
                htmlAttributes = new
                {
           @class = "form-control"
                }
            })
            @if (Model.canvas != null)
            {
                <img src="@Url.Action("GetImage", new { Model.id })" class="img-rounded img-edit" />
            }
            <input type="file" name="img" class="form-control margint-2" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.painterId, "painterId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("painterId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.painterId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
